{"version":3,"file":"static/js/29.c6074bd6.chunk.js","mappings":"6RAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAILC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAGMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EAf4B,wCAiB7B,WAA4BC,GAA5B,iEACEA,EAAEC,iBAEF,IAKEZ,EAASa,EAAAA,GAAAA,MAAqB,CAAEV,MAAAA,EAAOE,SAAAA,IAMxC,CAJC,MAAOS,GACR,CARD,QASEV,EAAS,IACTE,EAAY,GACb,CAdH,4CAjB6B,sBAkC7B,OACE,4BACE,mHAEA,kBAAMS,SAtCmB,4CAsCKC,MAAOxB,EAAOC,KAAMwB,aAAa,MAA/D,WACE,mBAAOD,MAAOxB,EAAOG,MAArB,4CAEE,kBACEuB,KAAK,QACLT,KAAK,QACLC,MAAOP,EACPgB,SAAUZ,QAId,mBAAOS,MAAOxB,EAAOG,MAArB,kDAEE,kBACEuB,KAAK,WACLT,KAAK,WACLC,MAAOL,EACPc,SAAUZ,QAId,mBAAQW,KAAK,SAAb,iDAIP,C","sources":["views/LoginView/LoginView.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\n// import { useLogInUserMutation } from 'redux/auth/auth-rtk-query';\n// import { authSlice } from '../../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport const LoginView = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // const [logInUser] = useLogInUserMutation();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      // await logInUser({\n      //   email,\n      //   password,\n      // });\n      dispatch(authOperations.logIn({ email, password }));\n      // dispatch(authSlice.isLoggedIn(true));\n    } catch (error) {\n    } finally {\n      setEmail('');\n      setPassword('');\n    }\n  }\n\n  return (\n    <div>\n      <h1>Страница логина</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n};\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","LoginView","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","e","preventDefault","authOperations","error","onSubmit","style","autoComplete","type","onChange"],"sourceRoot":""}