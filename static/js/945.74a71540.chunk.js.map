{"version":3,"file":"static/js/945.74a71540.chunk.js","mappings":"6SAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAILC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAGMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAlB+B,wCAoBhC,WAA4BC,GAA5B,iEACEA,EAAEC,iBACF,IACEb,EAASc,EAAAA,GAAAA,SAAwB,CAAEX,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAYjD,CANC,MAAOQ,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CATD,QAUEd,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,CAfH,4CApBgC,sBAsChC,OACE,UAACW,EAAA,EAAD,CACEC,OAAO,QACPxB,QAAQ,OACRC,cAAc,SACdwB,eAAe,SACfC,WAAW,SAEXC,MAAM,UACNC,WAAY,GARd,WAUE,sCAEA,kBAAMC,SAnDsB,4CAmDEC,MAAOlC,EAAOC,KAAMkC,aAAa,MAA/D,WACE,mBAAOD,MAAOlC,EAAOG,MAArB,kBAEE,kBAAOiC,KAAK,OAAOzB,KAAK,OAAOQ,MAAOR,EAAM0B,SAAUpB,QAGxD,mBAAOiB,MAAOlC,EAAOG,MAArB,oBAEE,kBACEiC,KAAK,QACLzB,KAAK,QACLQ,MAAON,EACPwB,SAAUpB,QAId,mBAAOiB,MAAOlC,EAAOG,MAArB,sBAEE,kBACEiC,KAAK,WACLzB,KAAK,WACLQ,MAAOJ,EACPsB,SAAUpB,QAId,mBAAQmB,KAAK,SAAb,2BAIP,C","sources":["views/RegisterView/RegisterView.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\nimport { Box } from 'components/Box';\n// import { useRegisterUserMutation } from 'redux/auth/auth-rtk-query';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport const RegisterView = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // const [registerUser] = useRegisterUserMutation();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      dispatch(authOperations.register({ name, email, password }));\n      // await registerUser({\n      //   name,\n      //   email,\n      //   password,\n      // });\n    } catch (error) {\n      console.log(error.message);\n    } finally {\n      setName('');\n      setEmail('');\n      setPassword('');\n    }\n  }\n\n  return (\n    <Box\n      height=\"100vh\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      // fontSize=\"72px\"\n      color=\"#010101\"\n      paddingTop={50}\n    >\n      <h1>Register</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          e-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Register</button>\n      </form>\n    </Box>\n  );\n};\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","e","preventDefault","authOperations","error","console","log","message","Box","height","justifyContent","alignItems","color","paddingTop","onSubmit","style","autoComplete","type","onChange"],"sourceRoot":""}